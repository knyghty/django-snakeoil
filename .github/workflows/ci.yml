name: CI
on: [push, pull_request]
jobs:
  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v1.1.1
      - uses: actions/checkout@v1
      - run: python -m pip install black
      - run: black --check snakeoil tests

  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v1.1.1
      - uses: actions/checkout@v1
      - run: python -m pip install flake8 flake8-bugbear
      - run: flake8

  isort:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v1.1.1
      - uses: actions/checkout@v1
      - run: python -m pip install isort
      - run: isort --check-only --diff snakeoil tests

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v1.1.1
      - uses: actions/checkout@v1
      - run: |
          python setup.py develop
          python -m pip install sphinx sphinxcontrib-spelling
      - run: |
          cd docs
          sphinx-build -b spelling -n -q -w doc_warnings -d _build/doctrees . _build/spelling

  SQLite:
    needs: [black, docs, flake8, isort]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        django-version: [3.1rc1]
        python-version: ["3.6", "3.7", "3.8"]
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1.1.1
        with:
          python-version: ${{ matrix.python-version }}
      - run: sudo apt-get install libmemcached-dev
      - uses: actions/checkout@v1
      - run: |
          python setup.py develop
          python -m pip install jinja2 pillow
          python -m pip install django~=${{ matrix.django-version }}
      - run: python runtests.py

  PostgreSQL:
    needs: [black, docs, flake8, isort]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        django-version: ["2.2", "3.0", "3.1rc1"]
        python-version: ["3.6", "3.7", "3.8"]
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: snakeoil
          POSTGRES_PASSWORD: snakeoil
        ports:
          - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1.1.1
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/checkout@v1
      - run: |
          python setup.py develop
          python -m pip install jinja2 pillow psycopg2
          python -m pip install django~=${{ matrix.django-version }}
      - run: python runtests.py
        env:
          DB: postgres
          DB_PORT: ${{ job.services.postgres.ports[5432] }}

  MySQL:
    needs: [black, docs, flake8, isort]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        django-version: ["3.1rc1"]
        python-version: ["3.6", "3.7", "3.8"]
    services:
      mysql:
        image: mysql
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
        env:
          MYSQL_ROOT_PASSWORD: snakeoil
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1.1.1
        with:
          python-version: ${{ matrix.python-version }}
      - run: sudo apt-get install libmysqlclient-dev
      - uses: actions/checkout@v1
      - run: |
          python setup.py develop
          python -m pip install jinja2 pillow mysqlclient
          python -m pip install django~=${{ matrix.django-version }}
      - run: python runtests.py
        env:
          DB: mysql
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}

  MariaDB:
    needs: [black, docs, flake8, isort]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        django-version: ["3.1rc1"]
        python-version: ["3.6", "3.7", "3.8"]
    services:
      mariadb:
        image: mariadb
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
        env:
          MYSQL_ROOT_PASSWORD: snakeoil
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1.1.1
        with:
          python-version: ${{ matrix.python-version }}
      - run: sudo apt-get install libmariadbclient-dev
      - uses: actions/checkout@v1
      - run: |
          python setup.py develop
          python -m pip install jinja2 pillow mysqlclient
          python -m pip install django~=${{ matrix.django-version }}
      - run: python runtests.py
        env:
          DB: mariadb
          DB_PORT: ${{ job.services.mariadb.ports['3306'] }}
